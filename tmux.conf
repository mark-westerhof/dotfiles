# Set prefix
unbind C-b
set -g prefix C-a

# TERM setup
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Toggle last window like screen
bind-key C-a last-window

# Kill session/server
bind-key k confirm kill-session
bind-key K confirm kill-server

# Clear pane
bind-key C send-keys -R

# Remove delay when switching vim modes
set -sg escape-time 0

# Smart pane switching with awareness of vim splits and fzf
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
is_fzf='echo "#{pane_start_command}" | grep FZF_CTRL_T_COMMAND'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim || $is_fzf" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim || $is_fzf" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Vim like copy & paste
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind C-p run "xsel -bo | tmux load-buffer - ; tmux paste-buffer"
bind C-y run "(tmux show-buffer | xsel -bi) && tmux display-message \"Buffer copied to clipboard\""
bind C-v run "(tmux show-buffer > /tmp/vim_clipboard) && tmux display-message \"Buffer copied to vim clipboard sync file\""

# Load OSX configuration
if "[ -f $HOME/.tmux_osx.conf ]" 'source-file $HOME/.tmux_osx.conf'

# Open a man page in new window
bind / command-prompt "split-window 'exec man %%'"

# Quick view of processes
bind '`' split-window "exec htop"

# Load tmuxline configuration
if "[ -f $HOME/.tmuxline.conf ]" 'source-file $HOME/.tmuxline.conf'
